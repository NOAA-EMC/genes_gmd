#!/bin/sh
# ---------------------------------------------------------------------------- #
# test_LM : Lake Michigan test for GMD optimization.                           #
#                                                                              #
# Remarks : This script runs exclusively in the directory from which it is     #
#           called. Managing scripts work on the storage of the output.        #
#         - The mpirun option is implemented only to produce the WRT version   #
#           effectively.                                                       #
#         - For final testing only. Should not be used for optimization.       #
#         - Compile model with LLG flag for    thjis test only.                #
#                                                                              #
#                                      Author      : Hendrik L. Tolman         #
#                                                                              #
# 15-Sep-2010 : Origination.                                                   #
#                                                                              #
#    Copyright 2010 National Weather Service (NWS),                            #
#       National Oceanic and Atmospheric Administration.  All rights           #
#       reserved.  Distributed as part of WAVEWATCH III. WAVEWATCH III is a    #
#       trademark of the NWS. No unauthorized use without permission.          #
#                                                                              #
# ---------------------------------------------------------------------------- #
# 0.  Preparations :
# 0.a General

  set -e

  echo ' ' ; echo ' '
  echo '                  ======> TEST RUN WAVEWATCH III <====== '
  echo '                    ==================================   '
  echo '                               Lake Michigan test test_LM'
  echo ' '

  ww3_env='.wwatch3.env'          # WAVEWATCH III setup file.
    setup='.genes.env'            # Package setup file.
     main=`pwd`                   # Main (work) directory.
     grid=genes.spec.env          # Setup file
     srce=genes.source.env        # Setup file
      snl=genes.snl.env           # Setup file

# 0.b WAVEWATCH setup

  cd
  if [ -f $ww3_env ]
  then
    set `grep WWATCH3_DIR $ww3_env` ; shift
    main_dir="$*"
    path_e="$main_dir/exe"        # path for executables
    echo "   Setup file $ww3_env found."
    echo "   Executables directory ; $path_e"
  else
    echo "   Set-up file $ww3_env not found (abort)"
    exit 1
  fi

# 0.c GMD optimization package setup

  if [ -f $setup ]
  then
    echo "   Setup file $setup found."
    . $setup
    echo "   Main genes directory ; $genes_main"
  else
    echo "   Setup file $setup NOT found (abort)."
    exit 2
  fi

  cd $genes_main

  if [ ! -f $grid ] ; then
    echo "   Setup file $grid not found (abort)." ; exit 3 ; fi

  if [ ! -f $srce ] ; then
    echo "   Setup file $srce not found (abort)." ; exit 4 ; fi

# 0.d Initial cleanup

  cd $main

  if [ ! -f $snl ] ; then
    echo "   Setup file $snl not found (OK)." ; fi

  echo "   Work directory for script : `pwd`"

  rm -f *.out *.inp *.ww3 ww3.* mod_def.* wind.*

# ---------------------------------------------------------------------------- #
# 1. Grid preprocessor

  echo ' '
  echo '+--------------------+'
  echo '|  Grid preprocessor |'
  echo '+--------------------+'
  echo ' '

  sed -n '/^\$/!p' $genes_main/genes.spec.env    > tempspec
  sed -n '/^\$/!p' $genes_main/genes.source.env  > tempsource

  for grid in grl_mich
  do
    sed -e "/SPECTRA/r tempspec" \
        -e 's/SPECTRA/DUMMY/g' \
        -e "/SOURCES/r tempsource" \
        -e 's/SOURCES/DUMMY/g' \
        $genes_main/tests/test_LM.data/$grid.inp | \
    sed -n '/DUMMY/!p' > ww3_grid.inp
    ln -sf $genes_main/tests/test_LM.data/$grid.bot .

    echo "   Screen ouput routed to ww3_grid.$grid.out"
    $path_e/ww3_grid > ww3_grid.$grid.out
    rm -f ww3_grid.inp $grid.bot
    mv mod_def.ww3 mod_def.$grid
  done

  rm -f tempspec tempsource

# 2. Initial conditions -----------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '| Initial conditions |'
  echo '+--------------------+'
  echo ' '

cat > ww3_strt.inp << EOF
$ WAVEWATCH III Initial conditions input file
$ -------------------------------------------
  5
EOF

  for grid in grl_mich
  do
    ln -sf mod_def.$grid mod_def.ww3
    echo "   Screen ouput routed to ww3_strt.$grid.out"
    $path_e/ww3_strt > ww3_strt.$grid.out
    mv restart.ww3 restart.$grid
    rm -f mod_def.ww3
  done

  rm -f ww3_strt.inp

# 3. Wind field -------------------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|      Wind field    |'
  echo '+--------------------+'
  echo ' '

  ln -sf $genes_main/tests/test_LM.data/ww3_prep_glerl_wind.inp ww3_prep.inp
  ln -sf $genes_main/tests/test_LM.data/glerl_wind.dat .
  ln -sf mod_def.grl_mich mod_def.ww3

  echo "   Screen ouput routed to ww3_prep.wind.out"
  $path_e/ww3_prep > ww3_prep.wind.out

  mv wind.ww3 wind.grl_mich
  rm -f ww3_prep.inp glerl_wind.dat mod_def.ww3

# 4. Main program -----------------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|    Main program    |'
  echo '+--------------------+'
  echo ' '

cat > ww3_multi.inp << EOF
$ WAVEWATCH III multi-scale input file
$ ------------------------------------
  1 0 F 1 T T
$
  'grl_mich'  'no' 'no' 'native' 'no' 'no' 'no' 'no'   1  1  0.00 1.00  F
$
   20091005 000000   20091008 000000
$
    F F
$
   20091005 000000   3600  20091008 000000
  F F T F F  T F F F F  T T F F T  T F T F F  F T F F F  F F F F F  F
   20091005 000000   3600  20091008 000000
   273.030  42.696  '45007     '
     0.000   0.000  'STOPSTRING'
$
   20091005 000000      0  20091008 000000
   20091005 000000      0  20091008 000000
   20091005 000000      0  20091008 000000
   20091005 000000      0  20091008 000000
$
  'the_end'  0
$
  'STP'
$
$ End of input file
EOF

  echo "   Screen ouput routed to ww3_multi.out"
  $path_e/ww3_multi # > ww3_multi.out
# mpirun -np 16 $path_e/ww3_multi # > ww3_multi.out
# poe $path_e/ww3_multi # > ww3_multi.out

  run_time=`grep 'Elapsed time' log.mww3 | awk '{ print $4}'`
  echo "      Run time : $run_time s"

  rm -f ww3_multi.inp restart.* test*.*ww3 

# 5. Gridded output ---------------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|   Gridded output   |'
  echo '+--------------------+'
  echo ' '

cat > gx_outf.inp << EOF
$ WAVEWATCH III Grid output post-processing
$ -----------------------------------------
  20091005 000000  3600.  73
$
  F F T F F  T F F F F  T T F F T  T F T F F  F T F F F  F F F F F  F
$
  0 999 0 999  T F
$
$ End of input file
EOF

  for mod in grl_mich
  do
    echo "   GrADS data for $mod ..."
    echo "      Screen ouput routed to gx_outf.$mod.out"
    ln -sf mod_def.$mod mod_def.ww3
    ln -sf out_grd.$mod out_grd.ww3

    $path_e/gx_outf > gx_outf.$mod.out

    echo "      ww3.ctl routed to $mod.ctl"

    sed -e "s/ww3\.grads/ww3\.$mod/g" ww3.ctl > $mod.ctl

    rm -f ww3.ctl
    echo "      ww3.grads routed to ww3.$mod"
    mv ww3.grads ww3.$mod

    rm -f mod_def.ww3 out_grd.ww3

  done

  rm -f gx_outf.inp out_grd.*

# 6. Point output -----------------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|    Point output    |' 
  echo '+--------------------+'
  echo ' '

  mv mod_def.points mod_def.ww3
  mv out_pnt.points out_pnt.ww3

# 5.a Spectral data 

  echo "   Raw spectral data ..."

cat > ww3_outp.inp << EOF
$ WAVEWATCH III Point output post-processing
$ ------------------------------------------
  20091006 000000  3600.   49
$
  1
 -1
$
  1
$
  3  0.  0.  52  T
EOF

  echo "      Screen output routed to ww3_op_1.out"
  $path_e/ww3_outp > ww3_op_1.out

  echo "      Table file ww3.68060700.spc routed to spec.ww3"
  mv ww3.68060700.spc spec.ww3
  rm -f ww3_outp.inp

# 5.b Source term (Snl) data

  echo "   Raw source term data ..."

cat > ww3_outp.inp << EOF
$ WAVEWATCH III Point output post-processing
$ ------------------------------------------
  20091006 000000  3600.   49
$
  1
 -1
$
  3
$
  4  0. 0. 52   F F T F F F  0  T
EOF

  echo "      Screen output routed to ww3_op_2.out"
  $path_e/ww3_outp > ww3_op_2.out

  echo "      Table file ww3.68060700.src routed to source.ww3"
  mv ww3.68060700.src source.ww3
  rm -f ww3_outp.inp

# 5.c Partitioned data

  echo "   Partitioned data ..."

cat > ww3_outp.inp << EOF
$ WAVEWATCH III Point output post-processing
$ ------------------------------------------
  20091006 000000 3600.  49
$
  1
 -1
$
  1
$
  4  0.  0.  52  T
EOF

  echo "      Screen output routed to ww3_op_3.out"
  $path_e/ww3_outp > ww3_op_3.out

  echo "      Table file tab52.ww routed to part.ww3"
  mv tab52.ww3 part.ww3
  rm -f ww3_outp.inp

# 5.d Grads spectra

  echo '   GrADS spectra'

cat > gx_outp.inp << EOF
$ WAVEWATCH III Point output post-processing (GrADS)
$ --------------------------------------------------
  20091006 000000 3600.  49
$
  1
 -1
$
  T T T T T T
EOF

    echo "   Screen output routed to gx_outp.out"
    $path_e/gx_outp > gx_outp.out

    rm -f gx_outp.inp

# ---------------------------------------------------------------------------- #
# 7. End of script

  rm -f quad*.bqf xnl4v5.*

  echo ' ' ; echo ' '
  echo '                  ======>  END OF WAVEWATCH III  <====== '
  echo '                    ==================================   '
  echo ' '
  echo 'End of test_LM' 

# End of test_LM ------------------------------------------------------------- #
