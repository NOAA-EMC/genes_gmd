#!/bin/sh
# ---------------------------------------------------------------------------- #
# test_02 : Deep-water fetch-limited growth test with constand wind speed and  #
#           direction.                                                         #
#                                                                              #
# Remarks : This script runs exclusively in the directory from which it is     #
#           called. Managing scripts work on the storage of the output.        #
#         - The mpirun option is implemented only to produce the WRT version   #
#           effectively, but should not be used in the optimization.           #
#                                                                              #
#                                      Author      : Hendrik L. Tolman         #
#                                                                              #
# 27-Oct-2008 : Origination.                                                   #
# 03-Nov-2008 ; Adding partitioned output.                                     #
# 24-Nov-2009 ; Starting with much larger time step.                           #
#                                                                              #
#    Copyright 2008-2010 National Weather Service (NWS),                       #
#       National Oceanic and Atmospheric Administration.  All rights           #
#       reserved.  Distributed as part of WAVEWATCH III. WAVEWATCH III is a    #
#       trademark of the NWS. No unauthorized use without permission.          #
#                                                                              #
# ---------------------------------------------------------------------------- #
# 0.  Preparations :
# 0.a General

  set -e

  echo ' ' ; echo ' '
  echo '                  ======> TEST RUN WAVEWATCH III <====== '
  echo '                    ==================================   '
  echo '                                   fetch-limited growth test test_02'
  echo '                                   constant wind speed and direction'
  echo ' '

  ww3_env='.wwatch3.env'          # WAVEWATCH III setup file.
    setup='.genes.env'            # Package setup file.
     main=`pwd`                   # Main (work) directory.
     grid=genes.spec.env          # Setup file
     srce=genes.source.env        # Setup file
      snl=genes.snl.env           # Setup file

# 0.b WAVEWATCH setup

  cd
  if [ -f $ww3_env ]
  then
    set `grep WWATCH3_DIR $ww3_env` ; shift
    main_dir="$*"
    path_e="$main_dir/exe"        # path for executables
    echo "   Setup file $ww3_env found."
    echo "   Executables directory ; $path_e"
  else
    echo "   Set-up file $ww3_env not found (abort)"
    exit 1
  fi

# 0.c GMD optimization package setup

  if [ -f $setup ]
  then
    echo "   Setup file $setup found."
    . $setup
    echo "   Main genes directory ; $genes_main"
  else
    echo "   Setup file $setup NOT found (abort)."
    exit 2
  fi

  cd $genes_main

  if [ ! -f $grid ] ; then
    echo "   Setup file $grid not found (abort)." ; exit 3 ; fi

  if [ ! -f $srce ] ; then
    echo "   Setup file $srce not found (abort)." ; exit 4 ; fi

# 0.d Initial cleanup

  cd $main

  if [ ! -f $snl ] ; then
    echo "   Setup file $snl not found (OK)." ; fi

  echo "   Work directory for script : `pwd`"

  rm -f *.out *.inp *.ww3 ww3.*

# ---------------------------------------------------------------------------- #
# 1. Grid preprocessor

  echo ' '
  echo '+--------------------+'
  echo '|  Grid preprocessor |'
  echo '+--------------------+'
  echo ' '

cat > ww3_grid.inp << EOF 
$ WAVEWATCH III Grid preprocessor input file
$ ------------------------------------------
  'test_02: Fetch limited growth  '
$ 
EOF
cat $genes_main/$grid   >> ww3_grid.inp
cat >> ww3_grid.inp << EOF 
$ 
   F T T F F T
 900.  900.  900.  120.
$
EOF
cat $genes_main/$srce   >> ww3_grid.inp
if [ -f "$snl" ] ; then
  cat $snl ; fi         >> ww3_grid.inp
cat >> ww3_grid.inp << EOF 
END OF NAMELISTS
$   
   52   3 
   10.e3  250.e3  1.
    0.e3 -250.e3  1. 
  -5. 5.75  10  -2500. 3 1 '(....)' 'UNIT' 'input'
$ 
   52*1
   52*1
   52*1 
$  
   10 3 1 '(....)' 'PART' 'mapsta.inp'
   0  0  F
   0  0  F
   0  0
$  
   0. 0. 0. 0.  0
EOF
   
  echo "   Screen ouput routed to ww3_grid.1.out"
  $path_e/ww3_grid > ww3_grid.1.out

  mv mod_def.ww3 mod_def.1
  rm -f ww3_grid.inp


cat > ww3_grid.inp << EOF 
$ WAVEWATCH III Grid preprocessor input file
$ ------------------------------------------
  'test_02: Fetch limited growth  '
$ 
EOF
cat $genes_main/$grid   >> ww3_grid.inp
cat >> ww3_grid.inp << EOF 
$ 
   F T T F F T
 900.  900.  900.   5.
$
EOF
cat $genes_main/$srce   >> ww3_grid.inp
if [ -f "$snl" ] ; then
  cat $snl ; fi         >> ww3_grid.inp
cat >> ww3_grid.inp << EOF 
END OF NAMELISTS
$   
   52   3 
   10.e3  250.e3  1.
    0.e3 -250.e3  1. 
  -5. 5.75  10  -2500. 3 1 '(....)' 'UNIT' 'input'
$ 
   52*1
   52*1
   52*1 
$  
   10 3 1 '(....)' 'PART' 'mapsta.inp'
   0  0  F
   0  0  F
   0  0
$  
   0. 0. 0. 0.  0
EOF
   
  echo "   Screen ouput routed to ww3_grid.2.out"
  $path_e/ww3_grid > ww3_grid.2.out

  mv mod_def.ww3 mod_def.2
  rm -f ww3_grid.inp

  mv mod_def.1 mod_def.ww3

# 2. Initial conditions -----------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '| Initial conditions |'
  echo '+--------------------+'
  echo ' '

cat > ww3_strt.inp << EOF
$ WAVEWATCH III Initial conditions input file
$ -------------------------------------------
  2
$
  0.0  0.25  270.  2.0 0. 0. 0. 1.e10 0. 1.e10

EOF

  echo "   Screen ouput routed to ww3_strt.out"
  $path_e/ww3_strt > ww3_strt.out

  rm -f ww3_strt.inp

# 3. Main program -----------------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|    Main program    |'
  echo '+--------------------+'
  echo ' '

cat > ww3_shel.inp << EOF
$ WAVEWATCH III shell input file
$ ------------------------------
   F T
   F T
   T T
   F
   F
   F
   F
$  
   19680606 000000
   19680606 180000
$
   1
$  
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
   19680607 000000      0  19680608 000000
   19680606 180000      1  19680606 180000
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
$  
   'WND' 19680606 000000   20.   270.  -20.
   'STP'
EOF

  echo "   Screen ouput routed to ww3_shel.1.out"
  $path_e/ww3_shel > ww3_shel.1.out
# mpirun -np 17 $path_e/ww3_shel > ww3_shel.1.out

  run_time=`grep 'Elapsed time' log.ww3 | awk '{ print $4}'`
  echo "      Run time : $run_time s"

  mv log.ww3 log.1.ww3
  rm -f ww3_shel.inp test.ww3
  mv restart1.ww3 restart.ww3
  mv mod_def.2 mod_def.ww3

cat > ww3_shel.inp << EOF
$ WAVEWATCH III shell input file
$ ------------------------------
   F T
   F T
   T T
   F
   F
   F
   F
$  
   19680606 180000
   19680607 000000
$
   1
$  
   19680606 000000      0  19680608 000000
   19680607 000000    900  19680607 000000
    10.0e3   0.0  '  10_km   '
    20.0e3   0.0  '  20_km   '
    30.0e3   0.0  '  30_km   '
    40.0e3   0.0  '  40_km   '
    50.0e3   0.0  '  50_km   '
    60.0e3   0.0  '  60_km   '
    70.0e3   0.0  '  70_km   '
    80.0e3   0.0  '  80_km   '
    90.0e3   0.0  '  90_km   '
   100.0e3   0.0  ' 100_km   '
   110.0e3   0.0  ' 110_km   '
   120.0e3   0.0  ' 120_km   '
   130.0e3   0.0  ' 130_km   '
   140.0e3   0.0  ' 140_km   '
   150.0e3   0.0  ' 150_km   '
   160.0e3   0.0  ' 160_km   '
   170.0e3   0.0  ' 170_km   '
   180.0e3   0.0  ' 180_km   '
   190.0e3   0.0  ' 190_km   '
   200.0e3   0.0  ' 200_km   '
   210.0e3   0.0  ' 210_km   '
   220.0e3   0.0  ' 220_km   '
   230.0e3   0.0  ' 230_km   '
   240.0e3   0.0  ' 240_km   '
   250.0e3   0.0  ' 250_km   '
   260.0e3   0.0  ' 260_km   '
   270.0e3   0.0  ' 270_km   '
   280.0e3   0.0  ' 280_km   '
   290.0e3   0.0  ' 290_km   '
   300.0e3   0.0  ' 300_km   '
   310.0e3   0.0  ' 310_km   '
   320.0e3   0.0  ' 320_km   '
   330.0e3   0.0  ' 330_km   '
   340.0e3   0.0  ' 340_km   '
   350.0e3   0.0  ' 350_km   '
   360.0e3   0.0  ' 360_km   '
   370.0e3   0.0  ' 370_km   '
   380.0e3   0.0  ' 380_km   '
   390.0e3   0.0  ' 390_km   '
   400.0e3   0.0  ' 400_km   '
   410.0e3   0.0  ' 410_km   '
   420.0e3   0.0  ' 420_km   '
   430.0e3   0.0  ' 430_km   '
   440.0e3   0.0  ' 440_km   '
   450.0e3   0.0  ' 450_km   '
   460.0e3   0.0  ' 460_km   '
   470.0e3   0.0  ' 470_km   '
   480.0e3   0.0  ' 480_km   '
   490.0e3   0.0  ' 490_km   '
   500.0e3   0.0  ' 500_km   '
     0.0     0.0  'STOPSTRING'
   19680607 000000      0  19680608 000000
   19680607 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
$  
   'WND' 19680606 000000   20.   270.  -20.
   'STP'
EOF

  echo "   Screen ouput routed to ww3_shel.2.out"
  $path_e/ww3_shel > ww3_shel.2.out
# mpirun -np 17 $path_e/ww3_shel > ww3_shel.2.out

  run_time=`grep 'Elapsed time' log.ww3 | awk '{ print $4}'`
  echo "      Run time : $run_time s"

  mv log.ww3 log.2.ww3
  rm -f ww3_shel.inp restart.ww3 test*.ww3

# 4. Gridded output ---------------------------------------------------------

# echo ' '
# echo '+--------------------+'
# echo '|   Gridded output   |'
# echo '+--------------------+'
# echo ' '

# 5. Point output -----------------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|    Point output    |' 
  echo '+--------------------+'
  echo ' '

# 5.a Spectral data 

  echo "   Raw spectral data ..."

cat > ww3_outp.inp << EOF
$ WAVEWATCH III Point output post-processing
$ ------------------------------------------
  19680607 000000  3600.   1
$
  1
  2
  3
  4
  5  
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19 
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 -1
$
  1
$
  3  0.  0.  52  T
EOF

  echo "      Screen output routed to ww3_op_1.out"
  $path_e/ww3_outp > ww3_op_1.out

  echo "      Table file ww3.68060700.spc routed to spec.ww3"
  mv ww3.68060700.spc spec.ww3
  rm -f ww3_outp.inp

# 5.b Source term (Snl) data

  echo "   Raw source term data ..."

cat > ww3_outp.inp << EOF
$ WAVEWATCH III Point output post-processing
$ ------------------------------------------
  19680607 000000  3600.   1
$
  1
  2
  3
  4
  5  
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19 
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 -1
$
  3
$
  4  0. 0. 52   F F T F F F  0  T
EOF

  echo "      Screen output routed to ww3_op_2.out"
  $path_e/ww3_outp > ww3_op_2.out

  echo "      Table file ww3.68060700.src routed to source.ww3"
  mv ww3.68060700.src source.ww3
  rm -f ww3_outp.inp

# 5.c Partitioned data

  echo "   Partitioned data ..."

cat > ww3_outp.inp << EOF
$ WAVEWATCH III Point output post-processing
$ ------------------------------------------
  19680607 000000  3600.   1
$
  1
  2
  3
  4
  5  
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19 
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 -1
$
  1
$
  4  0.  0.  52  T
EOF

  echo "      Screen output routed to ww3_op_3.out"
  $path_e/ww3_outp > ww3_op_3.out

  echo "      Table file tab52.ww routed to part.ww3"
  mv tab52.ww3 part.ww3
  rm -f ww3_outp.inp

# 5.d Grads spectra

  echo '   GrADS spectra'

cat > gx_outp.inp << EOF
$ WAVEWATCH III Point output post-processing (GrADS)
$ --------------------------------------------------
  19680607 000000 3600.  1
$
  1
  2
  3
  4
  5  
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19 
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 -1
$
  T T T T T T
EOF

    echo "   Screen output routed to gx_outp.out"
    $path_e/gx_outp > gx_outp.out

    rm -f gx_outp.inp

# ---------------------------------------------------------------------------- #
# 6. End of script

  rm -f quad*.bqf xnl4v5.*

  echo ' ' ; echo ' '
  echo '                  ======>  END OF WAVEWATCH III  <====== '
  echo '                    ==================================   '
  echo ' '
  echo 'End of test_02' 

# End of test_02 ------------------------------------------------------------- #
