#!/bin/sh
# ---------------------------------------------------------------------------- #
# test_12 : Beach test. Wind sea case.                                         #
#                                                                              #
# Remarks : This script runs exclusively in the directory from which it is     #
#           called. Managing scripts work on the storage of the output.        #
#         - The mpirun option is implemented only to produce the WRT version   #
#           effectively, but should not be used in the optimization.           #
#                                                                              #
#                                      Author      : Hendrik L. Tolman         #
#                                                                              #
# 12-Dec-2008 : Origination.                                                   #
#                                                                              #
#    Copyright 2008-2010 National Weather Service (NWS),                       #
#       National Oceanic and Atmospheric Administration.  All rights           #
#       reserved.  Distributed as part of WAVEWATCH III. WAVEWATCH III is a    #
#       trademark of the NWS. No unauthorized use without permission.          #
#                                                                              #
# ---------------------------------------------------------------------------- #
# 0.  Preparations :
# 0.a General

  set -e

  echo ' ' ; echo ' '
  echo '                  ======> TEST RUN WAVEWATCH III <====== '
  echo '                    ==================================   '
  echo '                                   Beach test test_12'
  echo ' '

  ww3_env='.wwatch3.env'          # WAVEWATCH III setup file.
    setup='.genes.env'            # Package setup file.
     main=`pwd`                   # Main (work) directory.
     grid=genes.spec.env          # Setup file
     srce=genes.source.env        # Setup file
      snl=genes.snl.env           # Setup file

# 0.b WAVEWATCH setup

  cd
  if [ -f $ww3_env ]
  then
    set `grep WWATCH3_DIR $ww3_env` ; shift
    main_dir="$*"
    path_e="$main_dir/exe"        # path for executables
    echo "   Setup file $ww3_env found."
    echo "   Executables directory ; $path_e"
  else
    echo "   Set-up file $ww3_env not found (abort)"
    exit 1
  fi

# 0.c GMD optimization package setup

  if [ -f $setup ]
  then
    echo "   Setup file $setup found."
    . $setup
    echo "   Main genes directory ; $genes_main"
  else
    echo "   Setup file $setup NOT found (abort)."
    exit 2
  fi

  cd $genes_main

  if [ ! -f $grid ] ; then
    echo "   Setup file $grid not found (abort)." ; exit 3 ; fi

  if [ ! -f $srce ] ; then
    echo "   Setup file $srce not found (abort)." ; exit 4 ; fi

# 0.d Initial cleanup

  cd $main

  if [ ! -f $snl ] ; then
    echo "   Setup file $snl not found (OK)." ; fi

  echo "   Work directory for script : `pwd`"

  rm -f *.out *.inp *.ww3 ww3.*

# ---------------------------------------------------------------------------- #
# 1. Grid preprocessor

  echo ' '
  echo '+--------------------+'
  echo '|  Grid preprocessor |'
  echo '+--------------------+'
  echo ' '

cat > ww3_grid.inp << EOF 
$ WAVEWATCH III Grid preprocessor input file
$ ------------------------------------------
  'test_12: Beach part            '
$ 
EOF
cat $genes_main/$grid   >> ww3_grid.inp
cat >> ww3_grid.inp << EOF 
$ 
   F T T T F T
  15.   15.    7.5  1.
$
EOF
cat $genes_main/$srce   >> ww3_grid.inp
if [ -f "$snl" ] ; then
  cat $snl ; fi         >> ww3_grid.inp
cat >> ww3_grid.inp << EOF 
  &SNL2 IQTYPE = 3, NDEPTH =  20 /
  &ANL2 DEPTHS =  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  8., 10.,
                 11., 12., 13., 14., 15., 16., 17., 18., 19., 20. /
END OF NAMELISTS
$   
   21   3 
   250.    10.e3  1.
     0.   -10.e3  1. 
  -0.1 0.10  10  -1. 3 1 '(....)' 'UNIT' 'input'
$ 
    0.   1.   2.   3.   4.   5.   6.   7.   8.   9.  10.
        11.  12.  13.  14.  15.  16.  17.  18.  19.  20.
    0.   1.   2.   3.   4.   5.   6.   7.   8.   9.  10.
        11.  12.  13.  14.  15.  16.  17.  18.  19.  20.
    0.   1.   2.   3.   4.   5.   6.   7.   8.   9.  10.
        11.  12.  13.  14.  15.  16.  17.  18.  19.  20.
$  
   10 3 1 '(....)' 'PART' 'mapsta.inp'
  21  2  F
   0  0  F
   0  0  F
   0  0
$  
   0. 0. 0. 0.  0
EOF
   
  echo "   Screen ouput routed to ww3_grid.grd1.out"
  $path_e/ww3_grid > ww3_grid.grd1.out

  mv mod_def.ww3 mod_def.grd1
  rm -f ww3_grid.inp

cat > ww3_grid.inp << EOF 
$ WAVEWATCH III Grid preprocessor input file
$ ------------------------------------------
  'test_12: Foreshore part        '
$ 
EOF
cat $genes_main/$grid   >> ww3_grid.inp
cat >> ww3_grid.inp << EOF 
$ 
   F T T T F T
  60.   45.   30.   1.
$
EOF
cat $genes_main/$srce   >> ww3_grid.inp
if [ -f "$snl" ] ; then
  cat $snl ; fi         >> ww3_grid.inp
cat >> ww3_grid.inp << EOF 
  &SNL2 IQTYPE = 3, NDEPTH =  33 /
  &ANL2 DEPTHS = 15., 16., 17., 18., 19., 20., 21., 22., 23., 24.,
                 25., 26., 27., 28., 29., 30., 31., 32., 33., 34.,
                 36., 38., 40., 42., 45., 50., 55., 60., 65., 70.,
                 80., 90., 100. /
END OF NAMELISTS
$
   34   3 
     1.E3  100.e3  1.
     0.   -100.e3  1. 
  -0.1 0.10  10  -1. 3 1 '(....)' 'UNIT' 'input'
$ 
   15.  16.  17.  18.  19.  20.  21.  22.  23.  24.  25.
        26.  27.  28.  29.  30.  31.  32.  33.  34.  36. 38. 40. 42. 45.  50.
        55.  60.  65.  70.  80.  90. 100. 100. 
   15.  16.  17.  18.  19.  20.  21.  22.  23.  24.  25.
        26.  27.  28.  29.  30.  31.  32.  33.  34.  36. 38. 40. 42. 45.  50.
        55.  60.  65.  70.  80.  90. 100. 100. 
   15.  16.  17.  18.  19.  20.  21.  22.  23.  24.  25.
        26.  27.  28.  29.  30.  31.  32.  33.  34.  36. 38. 40. 42. 45.  50.
        55.  60.  65.  70.  80.  90. 100. 100. 
$  
   10 3 1 '(....)' 'PART' 'mapsta.inp'
  34  2  F
   0  0  F
   0  0  F
   0  0
$  
   0. 0. 0. 0.  0
EOF
   
  echo "   Screen ouput routed to ww3_grid.grd2.out"
  $path_e/ww3_grid > ww3_grid.grd2.out

  mv mod_def.ww3 mod_def.grd2
  rm -f ww3_grid.inp

cat > ww3_grid.inp << EOF 
$ WAVEWATCH III Grid preprocessor input file
$ ------------------------------------------
  'test_12: Offshore part         '
$ 
EOF
cat $genes_main/$grid   >> ww3_grid.inp
cat >> ww3_grid.inp << EOF 
$ 
   F F F F F T
 900.  900.  450.   1.
$
EOF
cat $genes_main/$srce   >> ww3_grid.inp
if [ -f "$snl" ] ; then
  cat $snl ; fi         >> ww3_grid.inp
cat >> ww3_grid.inp << EOF 
  &SNL2 IQTYPE = 3, NDEPTH =  1 /
  &ANL2 DEPTHS = 100. /
END OF NAMELISTS
$
   3   3 
    33.E3  100.e3  1.
     0.   -100.e3  1. 
  -0.1 0.10  10  -1. 3 1 '(....)' 'UNIT' 'input'
$ 
   100. 100. 100.
   100. 100. 100.
   100. 100. 100.
$  
   10 3 1 '(....)' 'PART' 'mapsta.inp'
   0  0  F
   0  0  F
   0  0
$  
   0. 0. 0. 0.  0
EOF
   
  echo "   Screen ouput routed to ww3_grid.grd3.out"
  $path_e/ww3_grid > ww3_grid.grd3.out

  mv mod_def.ww3 mod_def.grd3
  rm -f ww3_grid.inp

cat > ww3_grid.inp << EOF 
$ WAVEWATCH III Grid preprocessor input file
$ ------------------------------------------
  'test_12: Offshore part DRY RUN '
$ 
EOF
cat $genes_main/$grid   >> ww3_grid.inp
cat >> ww3_grid.inp << EOF 
$ 
   T F F F F T
 900.  900.  450.   1.
$
EOF
cat $genes_main/$srce   >> ww3_grid.inp
if [ -f "$snl" ] ; then
  cat $snl ; fi         >> ww3_grid.inp
cat >> ww3_grid.inp << EOF 
  &SNL2 IQTYPE = 3, NDEPTH =  1 /
  &ANL2 DEPTHS = 100. /
END OF NAMELISTS
$
   3   3 
    33.E3  100.e3  1.
     0.   -100.e3  1. 
  -0.1 0.10  10  -1. 3 1 '(....)' 'UNIT' 'input'
$ 
   100. 100. 100.
   100. 100. 100.
   100. 100. 100.
$  
   10 3 1 '(....)' 'PART' 'mapsta.inp'
   0  0  F
   0  0  F
   0  0
$  
   0. 0. 0. 0.  0
EOF
   
  echo "   Screen ouput routed to ww3_grid.grd3d.out"
  $path_e/ww3_grid > ww3_grid.grd3d.out

  mv mod_def.ww3 mod_def.grd3d
  rm -f ww3_grid.inp

cat > ww3_grid.inp << EOF 
$ WAVEWATCH III Grid preprocessor input file
$ ------------------------------------------
  'test_12: Output and input      '
$ 
EOF
cat $genes_main/$grid   >> ww3_grid.inp
cat >> ww3_grid.inp << EOF 
$ 
   F T T F F T
  60.   60.   30.   1.
$
EOF
cat $genes_main/$srce   >> ww3_grid.inp
if [ -f "$snl" ] ; then
  cat $snl ; fi         >> ww3_grid.inp
cat >> ww3_grid.inp << EOF 
  &SNL2 IQTYPE = 3, NDEPTH =  47 /
  &ANL2 DEPTHS =  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  8., 10.,
                 11., 12., 13., 14., 15., 16., 17., 18., 19., 20.,
                 21., 22., 23., 24., 25., 26., 27., 28., 29., 30.,
                 31., 32., 33., 34., 36., 38., 40., 42., 45., 50.,
                 55., 60., 65., 70., 80., 90., 100. /
END OF NAMELISTS
$   
    3   3 
     1.E6   1.E6  1.
    -1.E6  -1.E6  1. 
  -0.1 0.10  10  -2500. 3 1 '(....)' 'UNIT' 'input'
$ 
   1 1 1
   1 1 1
   1 1 1
$  
   10 3 1 '(....)' 'PART' 'mapsta.inp'
   0  0  F
   0  0  F
   0  0
$  
   0. 0. 0. 0.  0
EOF
   
  echo "   Screen ouput routed to ww3_grid.pnts.out"
  $path_e/ww3_grid > ww3_grid.pnts.out

  cp mod_def.ww3 mod_def.pnts
  mv mod_def.ww3 mod_def.wind
  rm -f ww3_grid.inp

# 2. Initial conditions -----------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '| Initial conditions |'
  echo '+--------------------+'
  echo ' '

cat > ww3_strt.inp << EOF
$ WAVEWATCH III Initial conditions input file
$ -------------------------------------------
  2
$
  0.0  0.25  105.  2.0 0. 0. 33.E3 25.E8 0. 25.E2
EOF

  ln -s mod_def.grd1 mod_def.ww3
  echo "   Screen ouput routed to ww3_strt.grd1.out"
  $path_e/ww3_strt > ww3_strt.grd1.out
  mv restart.ww3 restart.grd1
  rm -f mod_def.ww3

  ln -s mod_def.grd2 mod_def.ww3
  echo "   Screen ouput routed to ww3_strt.grd2.out"
  $path_e/ww3_strt > ww3_strt.grd2.out
  mv restart.ww3 restart.grd2
  rm -f mod_def.ww3

  ln -s mod_def.grd3 mod_def.ww3
  echo "   Screen ouput routed to ww3_strt.grd3.out"
  $path_e/ww3_strt > ww3_strt.grd3.out
  mv restart.ww3 restart.grd3
  rm -f mod_def.ww3

  rm -f ww3_strt.inp

cat > ww3_prep.inp << EOF
$ WAVEWATCH III Field preprocessor input file
$ -------------------------------------------
   'WND' 'LL' F T
$
   19680606 000000
$
    -1.E6  1.E6  3  -1.E6  1.E6  3
$
  'UNIT' 3 1 '(..T..)' '(..F..)' 
  10 'data_file.1'
$
   -18.79 -18.79 -18.79
   -18.79 -18.79 -18.79
   -18.79 -18.79 -18.79
    -6.84  -6.84  -6.84
    -6.84  -6.84  -6.84
    -6.84  -6.84  -6.84
EOF

  ln -s mod_def.wind mod_def.ww3
  echo "   Screen ouput routed to ww3_prep.wind.out"
  $path_e/ww3_prep > ww3_prep.wind.out
  mv wind.ww3 wind.wind
  rm -f mod_def.ww3

  rm -f ww3_prep.inp

# 3. Main program -----------------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|    Main program    |'
  echo '+--------------------+'
  echo ' '

  echo "   Spinning up offshore part"

cat > ww3_multi.inp << EOF
$ -------------------------------------------------------------------- $
$ WAVEWATCH III multi-grid model driver input file                     $
$ -------------------------------------------------------------------- $
  1 1 T 1 F F
$
  'wind'  F F T F F F F
  'pnts'
  'grd3'  'no' 'no' 'wind' 'no' 'no' 'no' 'no'   1  1  0.00 1.00  F
$
   19680604 180000   19680606 180000
  T F
$
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
   19680606 180000      1  19680606 180000
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
$
  'the_end'  0
$
  'STP'
EOF

  echo "   Screen ouput routed to ww3_multi.1.out"
  $path_e/ww3_multi > ww3_multi.1.out

  run_time=`grep 'Elapsed time' log.mww3 | awk '{ print $4}'`
  echo "      Run time : $run_time s"

  mv restart1.grd3 restart.grd3
  mv mod_def.grd3d mod_def.grd3
  mv log.mww3 log.1.mww3
  mv log.grd3 log.1.grd3
  rm -f ww3_multi.inp test*.*ww3

  echo "   Spinning up neashore part"

cat > ww3_multi.inp << EOF
$ -------------------------------------------------------------------- $
$ WAVEWATCH III multi-grid model driver input file                     $
$ -------------------------------------------------------------------- $
  2 1 T 1 F F
$
  'wind'  F F T F F F F
  'pnts'
  'grd2'  'no' 'no' 'wind' 'no' 'no' 'no' 'no'   2  1  0.00 1.00  F
  'grd3'  'no' 'no' 'wind' 'no' 'no' 'no' 'no'   1  1  0.00 0.01  F
$
   19680606 180000   19680606 230000
  T F
$
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
   19680606 230000      1  19680606 230000
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
$
  'the_end'  0
$
  'STP'
EOF

  echo "   Screen ouput routed to ww3_multi.2.out"
  $path_e/ww3_multi > ww3_multi.2.out
# mpirun -np 10 $path_e/ww3_multi > ww3_multi.2.out

  run_time=`grep 'Elapsed time' log.mww3 | awk '{ print $4}'`
  echo "      Run time : $run_time s"

  mv restart1.grd2 restart.grd2
  mv restart1.grd3 restart.grd3
  mv log.mww3 log.2.mww3
  mv log.grd2 log.2.grd2
  mv log.grd3 log.2.grd3
  rm -f ww3_multi.inp test*.*ww3

  echo "   The full monte ..."

cat > ww3_multi.inp << EOF
$ -------------------------------------------------------------------- $
$ WAVEWATCH III multi-grid model driver input file                     $
$ -------------------------------------------------------------------- $
  2 1 T 1 F F
$
  'wind'  F F T F F F F
  'pnts'
  'grd1'  'no' 'no' 'wind' 'no' 'no' 'no' 'no'   3  1  0.00 1.00  F
  'grd2'  'no' 'no' 'wind' 'no' 'no' 'no' 'no'   2  1  0.00 1.00  F
$
   19680606 230000   19680607 000000
  T F
$
   19680606 000000      0  19680607 000000
   19680607 000000     60  19680607 000000
      250.      0.    '001_m     '
      500.      0.    '002_m     '
      750.      0.    '003_m     '
     1000.      0.    '004_m     '
     1250.      0.    '005_m     '
     1500.      0.    '006_m     '
     1750.      0.    '007_m     '
     2000.      0.    '008_m     '
     2250.      0.    '009_m     '
     2500.      0.    '010_m     '
     2750.      0.    '011_m     '
     3000.      0.    '012_m     '
     3250.      0.    '013_m     '
     3500.      0.    '014_m     '
     3750.      0.    '015_m     '
     4000.      0.    '016_m     '
     4250.      0.    '017_m     '
     4500.      0.    '018_m     '
     4750.      0.    '019_m     '
     5000.      0.    '020_m     '
     6000.      0.    '021_m     '
     7000.      0.    '022_m     '
     8000.      0.    '023_m     '
     9000.      0.    '024_m     '
    10000.      0.    '025_m     '
    11000.      0.    '026_m     '
    12000.      0.    '027_m     '
    13000.      0.    '028_m     '
    14000.      0.    '029_m     '
    15000.      0.    '030_m     '
    16000.      0.    '031_m     '
    17000.      0.    '032_m     '
    18000.      0.    '033_m     '
    19000.      0.    '034_m     '
    20000.      0.    '036_m     '
    21000.      0.    '038_m     '
    22000.      0.    '040_m     '
    23000.      0.    '042_m     '
    24000.      0.    '045_m     '
    25000.      0.    '050_m     '
    26000.      0.    '055_m     '
    27000.      0.    '060_m     '
    28000.      0.    '065_m     '
    29000.      0.    '070_m     '
    30000.      0.    '080_m     '
    31000.      0.    '090_m     '
    32000.      0.    '100_m     '
        0.      0.    'STOPSTRING'
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
$
  'the_end'  0
$
  'WND' 19680606 000000   20.   110.  -20.
  'STP'
EOF

  echo "   Screen ouput routed to ww3_multi.3.out"
  $path_e/ww3_multi > ww3_multi.3.out
# mpirun -np 10 $path_e/ww3_multi > ww3_multi.3.out

  run_time=`grep 'Elapsed time' log.mww3 | awk '{ print $4}'`
  echo "      Run time : $run_time s"

  mv log.mww3 log.3.mww3
  mv log.grd1 log.3.grd1
  mv log.grd2 log.3.grd2
  rm -f ww3_multi.inp test*.*ww3
  rm -f restart.* test*.*ww3

# 4. Gridded output ---------------------------------------------------------

# echo ' '
# echo '+--------------------+'
# echo '|   Gridded output   |'
# echo '+--------------------+'
# echo ' '

# 5. Point output -----------------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|    Point output    |' 
  echo '+--------------------+'
  echo ' '

  mv mod_def.pnts mod_def.ww3
  mv out_pnt.pnts out_pnt.ww3

# 5.a Spectral data 

  echo "   Raw spectral data ..."

cat > ww3_outp.inp << EOF
$ WAVEWATCH III Point output post-processing
$ ------------------------------------------
  19680607 000000  3600.   1
$
  1
  2
  3
  4
  5  
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19 
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 -1
$
  1
$
  3  0.  0.  52  T
EOF

  echo "      Screen output routed to ww3_op_1.out"
  $path_e/ww3_outp > ww3_op_1.out

  echo "      Table file ww3.68060700.spc routed to spec.ww3"
  mv ww3.68060700.spc spec.ww3
  rm -f ww3_outp.inp

# 5.b Source term (Snl) data

  echo "   Raw source term data ..."

cat > ww3_outp.inp << EOF
$ WAVEWATCH III Point output post-processing
$ ------------------------------------------
  19680607 000000  3600.   1
$
  1
  2
  3
  4
  5  
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19 
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 -1
$
  3
$
  4  0. 0. 52   F F T F F F  0  T
EOF

  echo "      Screen output routed to ww3_op_2.out"
  $path_e/ww3_outp > ww3_op_2.out

  echo "      Table file ww3.68060700.src routed to source.ww3"
  mv ww3.68060700.src source.ww3
  rm -f ww3_outp.inp

# 5.c Partitioned data

  echo "   Partitioned data ..."

cat > ww3_outp.inp << EOF
$ WAVEWATCH III Point output post-processing
$ ------------------------------------------
  19680607 000000 3600.  1
$
  1
  2
  3
  4
  5  
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19 
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 -1
$
  1
$
  4  0.  0.  52  T
EOF

  echo "      Screen output routed to ww3_op_3.out"
  $path_e/ww3_outp > ww3_op_3.out

  echo "      Table file tab52.ww routed to part.ww3"
  mv tab52.ww3 part.ww3
  rm -f ww3_outp.inp

# 5.d Grads spectra

  echo '   GrADS spectra'

cat > gx_outp.inp << EOF
$ WAVEWATCH III Point output post-processing (GrADS)
$ --------------------------------------------------
  19680607 000000 3600.  1
$
  1
  2
  3
  4
  5  
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19 
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 -1
$
  T T T T T T
EOF

    echo "   Screen output routed to gx_outp.out"
    $path_e/gx_outp > gx_outp.out

    rm -f gx_outp.inp

# ---------------------------------------------------------------------------- #
# 6. End of script

  rm -f quad*.bqf xnl4v5.*

  echo ' ' ; echo ' '
  echo '                  ======>  END OF WAVEWATCH III  <====== '
  echo '                    ==================================   '
  echo ' '
  echo 'End of test_12' 

# End of test_12 ------------------------------------------------------------- #
